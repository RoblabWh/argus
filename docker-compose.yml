services:
  db:
    image: postgres:16
    container_name: argusII_project_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${PORT_DB}:5432"
    volumes:
      - argus_db_data:/var/lib/postgresql/data
  
  api:
    build: ./api
    working_dir: /api
    container_name: argusII_backend
    restart: unless-stopped
    ports:
      - "${PORT_API}:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_PORT: ${PORT_REDIS}
      REDIS_HOST: ${HOST_REDIS}
      VITE_API_URL: ${VITE_API_URL}
      WEBODM_ENABLED: ${ENABLE_WEBODM}
      WEBODM_USERNAME: ${WEBODM_USERNAME}
      WEBODM_PASSWORD: ${WEBODM_PASSWORD}
      WEBODM_URL: ${WEBODM_URL}
      OPEN_WEATHER_API_KEY: ${OPEN_WEATHER_API_KEY}
    depends_on:
      - db
      - redis
    volumes:
      - ./api:/api
      - argus_uploaded_files:/api/reports_data

  frontend:
    build: ./frontend
    container_name: argusII_frontend
    restart: unless-stopped
    ports:
      - "${PORT_FRONTEND}:5173"
    volumes:
      - ./frontend:/frontend
      - frontend_node_modules:/frontend/node_modules  # Separates Volume f√ºr node_modules
    stdin_open: true
    tty: true
    network_mode: host
    environment:
      VITE_API_URL: ${VITE_API_URL}

  argus_mapping_worker:
    build: ./api
    working_dir: /api
    container_name: argusII_mapping_worker
    entrypoint: celery
    command: -A app.services.mapping.processing_manager worker --loglevel=info
    volumes:
      - ./api:/api
      - argus_uploaded_files:/api/reports_data
    depends_on: 
      - db
      - redis
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_PORT: ${PORT_REDIS}
      REDIS_HOST: ${HOST_REDIS}
      OPEN_WEATHER_API_KEY: ${OPEN_WEATHER_API_KEY}

  redis:
    image: redis:latest
    container_name: argusII_redis
    ports:
    - "${PORT_REDIS}:6379"

volumes:
  argus_db_data:
  argus_uploaded_files:
  frontend_node_modules: