"""initial

Revision ID: 37af2f559aeb
Revises: 
Create Date: 2025-05-22 12:05:55.756702

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '37af2f559aeb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_created_at'), 'groups', ['created_at'], unique=False)
    op.create_index(op.f('ix_groups_id'), 'groups', ['id'], unique=False)
    op.create_index(op.f('ix_groups_name'), 'groups', ['name'], unique=False)
    op.create_table('reports',
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('processing_duration', sa.Float(), nullable=True),
    sa.Column('requires_reprocessing', sa.Boolean(), nullable=True),
    sa.Column('auto_description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('report_id')
    )
    op.create_index(op.f('ix_reports_created_at'), 'reports', ['created_at'], unique=False)
    op.create_index(op.f('ix_reports_group_id'), 'reports', ['group_id'], unique=False)
    op.create_index(op.f('ix_reports_report_id'), 'reports', ['report_id'], unique=False)
    op.create_index(op.f('ix_reports_type'), 'reports', ['type'], unique=False)
    op.create_table('mapping_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.Column('flight_timestamp', sa.DateTime(), nullable=True),
    sa.Column('coord', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('flight_duration', sa.Float(), nullable=True),
    sa.Column('flight_height', sa.Float(), nullable=True),
    sa.Column('covered_area', sa.Float(), nullable=True),
    sa.Column('uav', sa.String(), nullable=True),
    sa.Column('image_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.report_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mapping_reports_flight_timestamp'), 'mapping_reports', ['flight_timestamp'], unique=False)
    op.create_index(op.f('ix_mapping_reports_id'), 'mapping_reports', ['id'], unique=False)
    op.create_index(op.f('ix_mapping_reports_report_id'), 'mapping_reports', ['report_id'], unique=False)
    op.create_table('pano_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.Column('video_duration', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.report_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pano_reports_id'), 'pano_reports', ['id'], unique=False)
    op.create_index(op.f('ix_pano_reports_report_id'), 'pano_reports', ['report_id'], unique=False)
    op.create_table('images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('thumbnail_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('coord', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('camera_model', sa.String(), nullable=True),
    sa.Column('mappable', sa.Boolean(), nullable=True),
    sa.Column('panoramic', sa.Boolean(), nullable=True),
    sa.Column('thermal', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['mapping_reports.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_images_id'), 'images', ['id'], unique=False)
    op.create_index(op.f('ix_images_report_id'), 'images', ['report_id'], unique=False)
    op.create_table('maps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['mapping_reports.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_maps_id'), 'maps', ['id'], unique=False)
    op.create_index(op.f('ix_maps_report_id'), 'maps', ['report_id'], unique=False)
    op.create_table('weather',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.Column('coord', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('humidity', sa.Float(), nullable=True),
    sa.Column('air_pressure', sa.Float(), nullable=True),
    sa.Column('wind_speed', sa.Float(), nullable=True),
    sa.Column('wind_dir_deg', sa.Float(), nullable=True),
    sa.Column('visibility', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['mapping_reports.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_weather_id'), 'weather', ['id'], unique=False)
    op.create_index(op.f('ix_weather_report_id'), 'weather', ['report_id'], unique=False)
    op.create_table('detections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=True),
    sa.Column('class_name', sa.String(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('bbox', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_detections_id'), 'detections', ['id'], unique=False)
    op.create_index(op.f('ix_detections_image_id'), 'detections', ['image_id'], unique=False)
    op.create_table('map_elements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('map_id', sa.Integer(), nullable=True),
    sa.Column('image_id', sa.Integer(), nullable=True),
    sa.Column('index', sa.Integer(), nullable=True),
    sa.Column('coord', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('corners', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('px_coord', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('px_corners', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], ),
    sa.ForeignKeyConstraint(['map_id'], ['maps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_map_elements_id'), 'map_elements', ['id'], unique=False)
    op.create_index(op.f('ix_map_elements_map_id'), 'map_elements', ['map_id'], unique=False)
    op.create_table('mapping_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=True),
    sa.Column('fov', sa.Float(), nullable=True),
    sa.Column('rel_altitude', sa.Float(), nullable=True),
    sa.Column('cam_pitch', sa.Float(), nullable=True),
    sa.Column('cam_roll', sa.Float(), nullable=True),
    sa.Column('cam_yaw', sa.Float(), nullable=True),
    sa.Column('uav_pitch', sa.Float(), nullable=True),
    sa.Column('uav_roll', sa.Float(), nullable=True),
    sa.Column('uav_yaw', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mapping_data_id'), 'mapping_data', ['id'], unique=False)
    op.create_index(op.f('ix_mapping_data_image_id'), 'mapping_data', ['image_id'], unique=False)
    op.create_table('thermal_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=True),
    sa.Column('min_temp', sa.Float(), nullable=True),
    sa.Column('max_temp', sa.Float(), nullable=True),
    sa.Column('temp_matrix', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('temp_unit', sa.String(), nullable=True),
    sa.Column('lut_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_thermal_data_id'), 'thermal_data', ['id'], unique=False)
    op.create_index(op.f('ix_thermal_data_image_id'), 'thermal_data', ['image_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_thermal_data_image_id'), table_name='thermal_data')
    op.drop_index(op.f('ix_thermal_data_id'), table_name='thermal_data')
    op.drop_table('thermal_data')
    op.drop_index(op.f('ix_mapping_data_image_id'), table_name='mapping_data')
    op.drop_index(op.f('ix_mapping_data_id'), table_name='mapping_data')
    op.drop_table('mapping_data')
    op.drop_index(op.f('ix_map_elements_map_id'), table_name='map_elements')
    op.drop_index(op.f('ix_map_elements_id'), table_name='map_elements')
    op.drop_table('map_elements')
    op.drop_index(op.f('ix_detections_image_id'), table_name='detections')
    op.drop_index(op.f('ix_detections_id'), table_name='detections')
    op.drop_table('detections')
    op.drop_index(op.f('ix_weather_report_id'), table_name='weather')
    op.drop_index(op.f('ix_weather_id'), table_name='weather')
    op.drop_table('weather')
    op.drop_index(op.f('ix_maps_report_id'), table_name='maps')
    op.drop_index(op.f('ix_maps_id'), table_name='maps')
    op.drop_table('maps')
    op.drop_index(op.f('ix_images_report_id'), table_name='images')
    op.drop_index(op.f('ix_images_id'), table_name='images')
    op.drop_table('images')
    op.drop_index(op.f('ix_pano_reports_report_id'), table_name='pano_reports')
    op.drop_index(op.f('ix_pano_reports_id'), table_name='pano_reports')
    op.drop_table('pano_reports')
    op.drop_index(op.f('ix_mapping_reports_report_id'), table_name='mapping_reports')
    op.drop_index(op.f('ix_mapping_reports_id'), table_name='mapping_reports')
    op.drop_index(op.f('ix_mapping_reports_flight_timestamp'), table_name='mapping_reports')
    op.drop_table('mapping_reports')
    op.drop_index(op.f('ix_reports_type'), table_name='reports')
    op.drop_index(op.f('ix_reports_report_id'), table_name='reports')
    op.drop_index(op.f('ix_reports_group_id'), table_name='reports')
    op.drop_index(op.f('ix_reports_created_at'), table_name='reports')
    op.drop_table('reports')
    op.drop_index(op.f('ix_groups_name'), table_name='groups')
    op.drop_index(op.f('ix_groups_id'), table_name='groups')
    op.drop_index(op.f('ix_groups_created_at'), table_name='groups')
    op.drop_table('groups')
    # ### end Alembic commands ###
